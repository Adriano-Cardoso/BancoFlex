version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  postgres:
    image: postgres:latest
    container_name: postgres_account-service
    environment:
      POSTGRES_DB: account_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  account-service:
    image: account-service:latest
    build:
      context: ./account-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/account_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
    depends_on:
      - postgres
    volumes:
      - postgres_account_data:/path/to/your/data # Certifique-se de usar o caminho correto para os dados

  config:
    build:
      context: ./config
      dockerfile: Dockerfile
    image: config:latest
    ports:
      - "8082:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

#  transaction-service:
#    image: transaction-service:latest
#    build:
#      context: ./transaction-service
#    ports:
#      - "8082:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/transaction_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: admin
#    depends_on:
#      - postgres
#    volumes:
#      - postgres_transaction_data:/path/to/your/data # Certifique-se de usar o caminho correto para os dados
#
#  risk-service:
#    image: risk-service:latest
#    build:
#      context: ./risk-service
#    ports:
#      - "8083:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/risk_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: admin
#    depends_on:
#      - postgres
#    volumes:
#      - postgres_risk_data:/path/to/your/data # Certifique-se de usar o caminho correto para os dados
#
#  notification-service:
#    image: notification-service:latest
#    build:
#      context: ./notification-service
#    ports:
#      - "8084:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notification_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: admin
#    depends_on:
#      - postgres
#    volumes:
#      - postgres_notification_data:/path/to/your/data # Certifique-se de usar o caminho correto para os dados

volumes:
  postgres_data:
    driver: local
  postgres_account_data:
    driver: local
#  postgres_transaction_data:
#    driver: local
#  postgres_risk_data:
#    driver: local
#  postgres_notification_data:
#    driver: local

networks:
  broker-kafka:
    driver: bridge
